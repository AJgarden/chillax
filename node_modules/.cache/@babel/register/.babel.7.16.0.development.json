{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/britz.wang/Project/MyWeb/chillax/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/britz.wang/Project/MyWeb/chillax\",\"filename\":\"/Users/britz.wang/Project/MyWeb/chillax/gulpfile.babel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/britz.wang/Project/MyWeb/chillax\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/britz.wang/Project/MyWeb/chillax/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/britz.wang/Project/MyWeb/chillax",
      "filename": "/Users/britz.wang/Project/MyWeb/chillax/gulpfile.babel.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/britz.wang/Project/MyWeb/chillax",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/britz.wang/Project/MyWeb/chillax/gulpfile.babel.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/britz.wang/Project/MyWeb/chillax/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/britz.wang/Project/MyWeb/chillax/",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "const {\n  src,\n  dest,\n  series,\n  parallel\n} = require('gulp');\n\nconst clean = require('gulp-clean');\n\nconst pug = require('gulp-pug');\n\nconst prettyHtml = require('gulp-pretty-html');\n\nconst babel = require('gulp-babel');\n\nconst uglify = require('gulp-uglify');\n\nconst sass = require('gulp-sass');\n\nconst rename = require('gulp-rename');\n\nconst injectHtml = require('gulp-inject-in-html');\n\nconst server = require('gulp-webserver');\n\nconst watch = require('gulp-watch');\n\nsass.compiler = require('node-sass'); // clean all files in dist folder\n\nconst cleanDist = () => {\n  return src('dist', {\n    allowEmpty: true,\n    sourcemaps: true\n  }).pipe(clean());\n}; // move files to dist folder\n\n\nconst moveFiles = () => {\n  return src('public/**/*', {\n    sourcemaps: true\n  }).pipe(dest('dist/'));\n}; // compile pug to html and output\n\n\nconst pugCompile = () => {\n  return src('src/**/*.pug', {\n    sourcemaps: true\n  }).pipe(pug()).pipe(prettyHtml({\n    indent_size: 2,\n    indent_char: ' ',\n    unformatted: true,\n    extra_liners: []\n  })).pipe(rename({\n    dirname: ''\n  })).pipe(dest('dist/'));\n}; // compile next gen js to es5 and then minify to output folder\n\n\nconst jsCompile = () => {\n  return src('src/**/*.js', {\n    sourcemaps: true\n  }).pipe(babel({\n    presets: ['@babel/preset-env']\n  })).pipe(uglify()).pipe(rename({\n    dirname: '',\n    extname: '.min.js'\n  })).pipe(dest('dist/assets/js/'));\n}; // compile sass/scss to css and then minify to output folder\n\n\nconst cssCompile = () => {\n  return src(['src/**/*.sass', 'src/**/*.scss'], {\n    sourcemaps: true\n  }).pipe(sass({\n    outputStyle: 'compact'\n  })).pipe(rename({\n    dirname: '',\n    extname: '.min.css'\n  })).pipe(dest('dist/assets/css/'));\n}; // inject js/css/html into html\n\n\nconst inject = () => {\n  return src('dist/**/*.html', {\n    sourcemaps: true\n  }).pipe(injectHtml()).pipe(prettyHtml({\n    indent_size: 2,\n    indent_char: ' ',\n    unformatted: true,\n    extra_liners: []\n  })).pipe(dest('dist/'));\n}; // config webserver\n\n\nconst webServer = () => {\n  return src('dist/').pipe(server({\n    host: 'localhost',\n    port: 8000,\n    livereload: true,\n    open: true\n  }));\n}; // watching action of adding/modifying/deleting files\n\n\nconst watching = () => {\n  return watch('src/**/*', {\n    ignoreInitial: true\n  }, series(cleanDist, moveFiles, parallel(pugCompile, jsCompile, cssCompile), inject));\n};\n\nexports.default = series(cleanDist, moveFiles, parallel(pugCompile, jsCompile, cssCompile), inject, webServer, watching);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "src",
        "dest",
        "series",
        "parallel",
        "require",
        "clean",
        "pug",
        "prettyHtml",
        "babel",
        "uglify",
        "sass",
        "rename",
        "injectHtml",
        "server",
        "watch",
        "compiler",
        "cleanDist",
        "allowEmpty",
        "sourcemaps",
        "pipe",
        "moveFiles",
        "pugCompile",
        "indent_size",
        "indent_char",
        "unformatted",
        "extra_liners",
        "dirname",
        "jsCompile",
        "presets",
        "extname",
        "cssCompile",
        "outputStyle",
        "inject",
        "webServer",
        "host",
        "port",
        "livereload",
        "open",
        "watching",
        "ignoreInitial",
        "exports",
        "default"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/britz.wang/Project/MyWeb/chillax/",
      "sourcesContent": [
        "const { src, dest, series, parallel } = require('gulp')\nconst clean = require('gulp-clean')\nconst pug = require('gulp-pug')\nconst prettyHtml = require('gulp-pretty-html')\nconst babel = require('gulp-babel')\nconst uglify = require('gulp-uglify')\nconst sass = require('gulp-sass')\nconst rename = require('gulp-rename')\nconst injectHtml = require('gulp-inject-in-html')\nconst server = require('gulp-webserver')\nconst watch = require('gulp-watch')\nsass.compiler = require('node-sass')\n\n// clean all files in dist folder\nconst cleanDist = () => {\n  return src('dist', {\n    allowEmpty: true,\n    sourcemaps: true,\n  }).pipe(clean())\n}\n\n// move files to dist folder\nconst moveFiles = () => {\n  return src('public/**/*', {\n    sourcemaps: true,\n  }).pipe(dest('dist/'))\n}\n\n// compile pug to html and output\nconst pugCompile = () => {\n  return src('src/**/*.pug', {\n    sourcemaps: true,\n  })\n    .pipe(pug())\n    .pipe(\n      prettyHtml({\n        indent_size: 2,\n        indent_char: ' ',\n        unformatted: true,\n        extra_liners: [],\n      })\n    )\n    .pipe(\n      rename({\n        dirname: '',\n      })\n    )\n    .pipe(dest('dist/'))\n}\n\n// compile next gen js to es5 and then minify to output folder\nconst jsCompile = () => {\n  return src('src/**/*.js', {\n    sourcemaps: true,\n  })\n    .pipe(\n      babel({\n        presets: ['@babel/preset-env'],\n      })\n    )\n    .pipe(uglify())\n    .pipe(\n      rename({\n        dirname: '',\n        extname: '.min.js',\n      })\n    )\n    .pipe(dest('dist/assets/js/'))\n}\n\n// compile sass/scss to css and then minify to output folder\nconst cssCompile = () => {\n  return src(['src/**/*.sass', 'src/**/*.scss'], {\n    sourcemaps: true,\n  })\n    .pipe(\n      sass({\n        outputStyle: 'compact',\n      })\n    )\n    .pipe(\n      rename({\n        dirname: '',\n        extname: '.min.css',\n      })\n    )\n    .pipe(dest('dist/assets/css/'))\n}\n\n// inject js/css/html into html\nconst inject = () => {\n  return src('dist/**/*.html', {\n    sourcemaps: true,\n  })\n    .pipe(injectHtml())\n    .pipe(\n      prettyHtml({\n        indent_size: 2,\n        indent_char: ' ',\n        unformatted: true,\n        extra_liners: [],\n      })\n    )\n    .pipe(dest('dist/'))\n}\n\n// config webserver\nconst webServer = () => {\n  return src('dist/').pipe(\n    server({\n      host: 'localhost',\n      port: 8000,\n      livereload: true,\n      open: true,\n    })\n  )\n}\n\n// watching action of adding/modifying/deleting files\nconst watching = () => {\n  return watch(\n    'src/**/*',\n    { ignoreInitial: true },\n    series(cleanDist, moveFiles, parallel(pugCompile, jsCompile, cssCompile), inject)\n  )\n}\n\nexports.default = series(\n  cleanDist,\n  moveFiles,\n  parallel(pugCompile, jsCompile, cssCompile),\n  inject,\n  webServer,\n  watching\n)\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1635226587914
  }
}